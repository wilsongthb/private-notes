# Generated by Django 3.2.4 on 2021-07-02 20:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import expo_agency.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion del registro')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de modificacion')),
                ('deleted_at', models.DateTimeField(editable=False, help_text='Fecha de eliminacion, nulo en caso aun no esta eliminado', null=True)),
                ('name', models.CharField(help_text='Nombre del turista/cliente', max_length=150)),
                ('lastname', models.CharField(help_text='sub nombre del turista/cliente', max_length=150)),
                ('idcard', models.CharField(help_text='DNI/IDCARD', max_length=20)),
                ('birth_date', models.DateField(help_text='Fecha de nacimiento')),
                ('country', models.CharField(help_text='Pais de origen', max_length=255)),
                ('cellphone', models.CharField(help_text='numero de celular', max_length=20)),
                ('email', models.CharField(help_text='Correo electronico', max_length=20)),
                ('user', models.ForeignKey(help_text='El usuario relacionado al cliente participante', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion del registro')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de modificacion')),
                ('deleted_at', models.DateTimeField(editable=False, help_text='Fecha de eliminacion, nulo en caso aun no esta eliminado', null=True)),
                ('image', models.ImageField(help_text='Imagen referencial principal', upload_to='images')),
                ('name', models.CharField(help_text='Nombre del tour', max_length=255)),
                ('description', models.TextField(help_text='Descripcion en rich text', max_length=5000)),
                ('price', models.DecimalField(decimal_places=2, help_text='Costo en dolares o moneda internacional', max_digits=10, validators=[expo_agency.models.validate_positive])),
                ('type', models.PositiveSmallIntegerField(default=1, help_text='Tipo de tour o producto')),
                ('service', models.TextField(help_text='Nota acerca de lo que incluye o no', max_length=2500, null=True)),
                ('advice', models.TextField(help_text='Avisos, notas, detalles, etc.', max_length=2500, null=True)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TourActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion del registro')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de modificacion')),
                ('deleted_at', models.DateTimeField(editable=False, help_text='Fecha de eliminacion, nulo en caso aun no esta eliminado', null=True)),
                ('activity', models.CharField(max_length=255)),
                ('time', models.CharField(max_length=6)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expo_agency.product')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion del registro')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de modificacion')),
                ('deleted_at', models.DateTimeField(editable=False, help_text='Fecha de eliminacion, nulo en caso aun no esta eliminado', null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[expo_agency.models.validate_positive])),
                ('local_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[expo_agency.models.validate_positive])),
                ('is_local', models.BooleanField(default=False)),
                ('companion', models.PositiveSmallIntegerField(default=0, help_text='Numero de acompaniantes')),
                ('request_message', models.TextField(help_text='Mensaje adiciona de solicitud', max_length=1000, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expo_agency.client')),
                ('product', models.ForeignKey(help_text='El tour principal', on_delete=django.db.models.deletion.CASCADE, to='expo_agency.product')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
    ]
